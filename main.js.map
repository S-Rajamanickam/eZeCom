{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-customer/create-customer.component.css","webpack:///./src/app/create-customer/create-customer.component.html","webpack:///./src/app/create-customer/create-customer.component.ts","webpack:///./src/app/customer-details/customer-details.component.css","webpack:///./src/app/customer-details/customer-details.component.html","webpack:///./src/app/customer-details/customer-details.component.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/customers-list/customers-list.component.css","webpack:///./src/app/customers-list/customers-list.component.html","webpack:///./src/app/customers-list/customers-list.component.ts","webpack:///./src/app/search-customers/search-customers.component.css","webpack:///./src/app/search-customers/search-customers.component.html","webpack:///./src/app/search-customers/search-customers.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomersListComponent } from './customers-list/customers-list.component';\r\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\r\nimport { SearchCustomersComponent } from './search-customers/search-customers.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'customer', pathMatch: 'full' },\r\n    { path: 'customer', component: CustomersListComponent },\r\n    { path: 'add', component: CreateCustomerComponent },\r\n    { path: 'findbyage', component: SearchCustomersComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding: 20px;\\\" id=\\\"container\\\">\\n    <h2 style=\\\"color: dodgerblue\\\" style=\\\"text-align: center;\\\">{{title}}</h2>\\n    <h3>{{description}}</h3>\\n    <nav>\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <a routerLink=\\\"customer\\\" class=\\\"btn btn-danger active form-control\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Customers</a>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <a routerLink=\\\"add\\\" class=\\\"btn btn-danger active form-control\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Add</a>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <a routerLink=\\\"findbyage\\\" class=\\\"btn btn-danger active form-control\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Search</a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </nav>\\n    <div class=\\\"container\\\" id=\\\"cont\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Customer Management';\n  // description = 'Angular-SpringBoot';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { SearchCustomersComponent } from './search-customers/search-customers.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateCustomerComponent,\n    CustomerDetailsComponent,\n    CustomersListComponent,\n    SearchCustomersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3>Create Customer</h3>\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 300px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"age\\\">Age</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"age\\\" required [(ngModel)]=\\\"customer.age\\\" name=\\\"age\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <h4>You submitted successfully!</h4>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"newCustomer()\\\">Add</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n  customer: Customer = new Customer();\n  submitted = false;\n\n  constructor(private customerService: CustomerService) { }\n\n  ngOnInit() {\n  }\n\n  newCustomer(): void {\n    this.submitted = false;\n    this.customer = new Customer();\n  }\n\n  save() {\n    this.customerService.createCustomer(this.customer)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.customer = new Customer();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"customer\\\">\\n    <table>\\n        <tr>\\n            <td>\\n                {{customer.name}}\\n            </td>\\n            <td>\\n                {{customer.age}}\\n            </td>\\n            <td>\\n                {{customer.active}}\\n            </td>\\n            <td>\\n                <span class=\\\"button is-small btn-primary\\\" *ngIf='customer.active' (click)='updateActive(false)'>Inactive</span>\\n                <span class=\\\"button is-small btn-primary\\\" *ngIf='!customer.active' (click)='updateActive(true)'>Active</span>\\n            </td>\\n            <td>\\n                <span class=\\\"button is-small btn-danger\\\" (click)='deleteCustomer()'>Delete</span>\\n            </td>\\n        </tr>\\n    </table>\\n\\n\\n\\n    <hr/>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n\nimport { CustomersListComponent } from '../customers-list/customers-list.component';\n\n@Component({\n  selector: 'customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: Customer;\n\n  constructor(private customerService: CustomerService, private listComponent: CustomersListComponent) { }\n\n  ngOnInit() {\n  }\n\n  updateActive(isActive: boolean) {\n    this.customerService.updateCustomer(this.customer.id,\n      { name: this.customer.name, age: this.customer.age, active: isActive })\n      .subscribe(\n        data => {\n          console.log(data);\n          this.customer = data as Customer;\n        },\n        error => console.log(error));\n  }\n\n  deleteCustomer() {\n    this.customerService.deleteCustomer(this.customer.id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.listComponent.reloadData();\n        },\n        error => console.log(error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  private baseUrl = 'http://localhost:8080/api/customers';\n\n  constructor(private http: HttpClient) { }\n\n  getCustomer(id: number): Observable<Object> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createCustomer(customer: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}` + `/create`, customer);\n  }\n\n  updateCustomer(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteCustomer(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCustomersList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getCustomersByAge(age: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/age/${age}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(`${this.baseUrl}` + `/delete`, { responseType: 'text' });\n  }\n}\n","export class Customer {\r\n    id: number;\r\n    name: string;\r\n    age: number;\r\n    active: boolean;\r\n}\r\n","module.exports = \"\"","module.exports = \"<br>\\n<table>\\n    <tr>\\n        <th>Name</th>\\n        <th>Age</th>\\n        <th>Status</th>\\n        <th>Status</th>\\n        <th>Delete</th>\\n    </tr>\\n</table>\\n<div *ngFor=\\\"let customer of customers | async\\\" style=\\\"width: 300px;\\\">\\n    <customer-details [customer]='customer'></customer-details>\\n</div>\\n\\n<div>\\n    <button type=\\\"button\\\" class=\\\"button btn-danger\\\" (click)='deleteCustomers()'>Delete All</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n\n@Component({\n  selector: 'customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: ['./customers-list.component.css']\n})\nexport class CustomersListComponent implements OnInit {\n\n  customers: Observable<Customer[]>;\n\n  constructor(private customerService: CustomerService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  deleteCustomers() {\n    this.customerService.deleteAll()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log('ERROR: ' + error));\n  }\n\n  reloadData() {\n    this.customers = this.customerService.getCustomersList();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Find By Age</h3>\\n<div style=\\\"width: 300px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastname\\\">Age</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"age\\\" required [(ngModel)]=\\\"age\\\" name=\\\"age\\\">\\n    </div>\\n\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n    </div>\\n  </form>\\n</div>\\n<ul>\\n  <li *ngFor=\\\"let customer of customers\\\">\\n    <h4>{{customer.id}} - {{customer.name}} {{customer.age}}</h4>\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'search-customers',\n  templateUrl: './search-customers.component.html',\n  styleUrls: ['./search-customers.component.css']\n})\nexport class SearchCustomersComponent implements OnInit {\n\n  age: number;\n  customers: Customer[];\n\n  constructor(private dataService: CustomerService) { }\n\n  ngOnInit() {\n    this.age = 0;\n  }\n\n  private searchCustomers() {\n    this.dataService.getCustomersByAge(this.age)\n      .subscribe(customers => this.customers = customers);\n  }\n\n  onSubmit() {\n    this.searchCustomers();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}